> Spring MVC and REST Annotations
@Controller
- allows autodetection of component classes in the classpath and auto-registering bean definitions for them

@RequestMapping
- is used to map web requests onto specific handler classes and handler methods.
- When it is used on class level it creates a base URI for which the controller will be used.
- When it is used on methods it will give you the URI on which the handler methods will be executed.

@CookieValue, @CrossOrigin
@RestController
- By annotating a class with this annotation you no longer need to add @ResponseBody to all the RequestMapping method.

> Spring Framework DataAccess Annotations
@Transactional
- The Propagation type of the transaction
- The Isolation level of the transaction
- A timeout for the operation wrapped by the transaction
- A read only flag – a hint for the persistence provider that the transaction must be read only

> Cache-Based Annotations
@Cacheable
- Enabling the cache behaviour for a method
- Pparameterize it with the name of the cache where the results would be stored.


> Spring Boot Annotations
@EnableAutoConfiguration
- Appears on main application class
- This annotation implicitly defines a base “search package”.

@SpringBootApplication
- It does is a component scan.

> Spring Framework Stereotype Annotations
@Component
- It marks the Java class as a bean
- The component-scanning mechanism of Spring can add into the application context.

@Controller
- Used to indicate the class is a Spring controller

@Service
- It marks a Java class that performs some service
- It is a specialized form of the @Component

@Repository
- Java classes which directly access the database.
- This annotation has a automatic translation feature.
    - there is a handler for that exception and there is no need to add a try catch block.

> Core Spring Framework Annotations

@Required
- Applied on Bean setter methods
- Indicates that the affected bean must be populated at configuration time with the required property

@Autowired
- Applied on fields, setter methods, and constructors
- Injects object dependency implicitly
- Only one constructor of any bean class can carry the @Autowired annotation.

@Qualifier
- Used along with @Autowired
- @Qualifier can be specified on individual constructor arguments or method parameters.
- Used to avoid confusion which occurs when you create more than one bean of the same type and want to wire only one of them with a property.

@Configuration
- Is a configuration by itself and will have methods to instantiate and configure the dependencies.

@ComponentScan
- @ComponentScan + @Configuration => to know the packages to scan for annotated components

@Bean
- Used as a method level
- @Bean+@Configuration => to create Spring beans
- The method annotated with this annotation works as bean ID and it creates and returns the actual bean.

@Lazy
- The bean will be created and initialized only when it is first requested for.

@Value
- Indicates a default value expression for the field or parameter to initialize the property with.

